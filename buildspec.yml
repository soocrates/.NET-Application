version: 0.2

phases:
  install:
    commands:
      - echo Installing .NET 8.0 SDK...
      - powershell -Command "Invoke-WebRequest -Uri https://dot.net/v1/dotnet-install.ps1 -OutFile dotnet-install.ps1"
      - powershell -ExecutionPolicy Bypass -File .\dotnet-install.ps1 -Version 8.0.100
      - $dotnet_path = [System.IO.Path]::Combine($Env:USERPROFILE, ".dotnet")
      - $Env:PATH += ";$dotnet_path"
      - $dotnet_cmd = [System.IO.Path]::Combine($dotnet_path, "dotnet.exe")
      - &$dotnet_cmd --version  # Check the installed SDK version to confirm it's using .NET 8.0

  pre_build:
    commands:
      - echo Building the application...
      - dotnet build --configuration Release

  build:
    commands:
      - echo Running tests...
      - dotnet test --configuration Release --no-build --verbosity normal

  post_build:
    commands:
      - echo Preparing artifacts for deployment...
      - dotnet publish --configuration Release --output ./output # Publish the application to the output directory

artifacts:
  files:
    - output/**/* # Include all published files in the output directory

  # Specify the S3 bucket and path where artifacts will be stored
  # Note: The S3 bucket must be configured in your CodeBuild project
  # You can set the bucket and path in your CodeBuild settings, but here we do it in buildspec

  discard-paths: no # Maintain the folder structure

  # Specify the name of the S3 bucket where the artifacts should be stored
  base-directory: output
  destination:
    bucket: your-s3-bucket-name-here
    path: codebuild/artifacts # You can customize the path within your S3 bucket
