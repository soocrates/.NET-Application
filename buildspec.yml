version: 0.2

phases:
  install:
    commands:
      - echo Installing .NET 8 SDK...
      # Use PowerShell's Invoke-WebRequest to download the .NET 8 SDK
      - powershell -Command "Invoke-WebRequest -Uri https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-8.0.100-windows-x64-binaries -OutFile dotnet8.zip"
      - echo Extracting .NET 8 SDK...
      # Create a directory to extract and install .NET 8 SDK
      - mkdir -p /dotnet8
      - powershell -Command "Expand-Archive -Path dotnet8.zip -DestinationPath /dotnet8"
      - echo Setting up PATH environment for .NET 8 SDK...
      # Add the .NET 8 SDK path to the environment PATH
      - export PATH="/dotnet8:$PATH"
      - echo Confirming .NET 8 SDK version...
      # Print the installed .NET version
      - /dotnet8/dotnet --version

  pre_build:
    commands:
      - echo Building the application...
      - dotnet build --configuration Release

  build:
    commands:
      - echo Running tests...
      - dotnet test --configuration Release --no-build --verbosity normal

  post_build:
    commands:
      - echo Preparing artifacts for deployment...
      - dotnet publish --configuration Release --output ./output # Publish the application to the output directory

artifacts:
  files:
    - output/**/* # Include all published files in the output directory

  # Specify the S3 bucket and path where artifacts will be stored
  # Note: The S3 bucket must be configured in your CodeBuild project
  # You can set the bucket and path in your CodeBuild settings, but here we do it in buildspec

  discard-paths: no # Maintain the folder structure

  # Specify the name of the S3 bucket where the artifacts should be stored
  base-directory: output
  destination:
    bucket: your-s3-bucket-name-here
    path: codebuild/artifacts # You can customize the path within your S3 bucket
